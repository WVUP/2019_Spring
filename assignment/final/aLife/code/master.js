const baseUrl = 'https://pokeapi.co/api/v2/';

let pkmnList = []; // full pkmn list
let currentPkmnList = []; // filtered pkmn list
let pkmnTypes = []; // list of types
let moves = []; // list of moves
let builtPkmn = []; // pkmn that have been generated by user already, onclick event listener will check this list first... eventually.

let pkmnListDiv = document.getElementById("pkmnList");
let pkmnPic = document.getElementById("terminalScreen");
let pkmnStats = document.getElementById("statSection");
let moveset = document.getElementById("scrollingMoveset");
let type1 = document.getElementById("leftType").getElementsByTagName("p")[0];
let type2 = document.getElementById("rightType").getElementsByTagName("p")[0];
let idBox = document.getElementById("pkmnIdBox");

pkmnListDiv.innerHTML = "Loading Pokemon";

function fetchPkmn() {
    fetch(baseUrl + 'pokedex/1/')
        .then(res => res.json())
        .then(data => {
            for(let i = 0; i < data.pokemon_entries.length; i++)
            {
                pkmnList.push({
                    ID: data.pokemon_entries[i].entry_number, 
                    NAME: data.pokemon_entries[i].pokemon_species.name,
                    PKMNURL: data.pokemon_entries[i].pokemon_species.url});
            }
            pkmnListDiv.innerHTML = "";
            for(let i = 0; i < pkmnList.length; i++)
            {
                pkmnListDiv.innerHTML += `<p id="${pkmnList[i].NAME}">${pkmnList[i].NAME}</p>` ;
            }
            //console.log(pkmnList);
        });
}

function fetchTypes() {
    fetch(baseUrl + 'type/')
        .then(res => res.json())
        .then(data => {
            for(let i = 0; i < data.results.length; i++)
            {
                pkmnTypes.push({
                    TYPE: data.results[i].name,
                    TYPEURL: data.results[i].url
                });
            }
            //console.log(pkmnTypes);
        });
    console.log(moves);
}

function fetchMoves() {
    fetch(baseUrl + 'move/')
        .then(res => res.json())
        .then(data => {
            let num = data.count;
            fetch(baseUrl + 'move?offset=0&limit=' + num)
                .then(res => res.json())
                .then(data => {
                    for(let i = 0; i < num; i++)
                    {
                        fetch(data.results[i].url)
                            .then(res =>res.json())
                            .then(data => {
                                moves.push({
                                    NAME: data.name,
                                    TYPE: data.type.name,
                                    POWER: data.power
                                });
                            });
                    }
                });
        });
}

pkmnListDiv.addEventListener("click", function(){
    var x = event.target.id;
    //console.log(pkmnList.find(pkmn => pkmn.NAME === x));

    for(let i = 0; i < pkmnList.length; i++)
    {
        document.getElementById(pkmnList[i].NAME).classList.contains("pkmn")? document.getElementById(pkmnList[i].NAME).classList.remove("pkmn"): "";
    }
    document.getElementById(x).classList.add("pkmn");
    pkmnListDiv.classList.remove("pkmn");

    let pkmn = pkmnList.find(pkmn => pkmn.NAME === x);

    fetch(baseUrl + 'pokemon/' + pkmn.ID + '/')
        .then(res => res.json())
        .then(data => {
            //console.log(data);
            pkmn.TYPE1 = data.types[0].type.name;
            pkmn.TYPE2 = data.types.length > 1? data.types[1].type.name: "";
            type1.innerHTML = pkmn.TYPE1;
            type2.innerHTML = pkmn.TYPE2;
            idBox.innerHTML = pkmn.ID;
            terminalScreen.innerHTML =
            `
                <img src="${data.sprites.front_default}">
            `
            statSection.innerHTML =
            `
                <div class="col-sm-6">${data.stats[5].stat.name}: ${data.stats[5].base_stat}</div>
                <div class="col-sm-6">${data.stats[4].stat.name}: ${data.stats[4].base_stat}</div>
                <div class="col-sm-6">${data.stats[3].stat.name}: ${data.stats[3].base_stat}</div>
                <div class="col-sm-6">${data.stats[2].stat.name}: ${data.stats[2].base_stat}</div>
                <div class="col-sm-6">${data.stats[1].stat.name}: ${data.stats[1].base_stat}</div>
                <div class="col-sm-6">${data.stats[0].stat.name}: ${data.stats[0].base_stat}</div>
            `
            moveset.innerHTML = "";
            for(let i = 0; i < data.moves.length; i++)
            {
                let move = moves.find(name => name.NAME === data.moves[i].move.name);
                moveset.innerHTML +=
                `
                    <div class="row">
                        <div class="col-sm-5 offset-1">${move.NAME}</div>
                        <div class="col-sm-2">${move.TYPE}</div>
                        <div class="col-sm-1" style="text-align: right;">${move.POWER != null ? move.POWER : ""}</div>
                    </div>
                `
            }
        });
});

fetchPkmn();
fetchTypes();
fetchMoves();
